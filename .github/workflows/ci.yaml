name: Container CI

on:
  push:
  workflow_dispatch:


jobs:
  build:
    runs-on: ubuntu-22.04
    steps:
      -
        name: Checkout
        uses: actions/checkout@v3
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      -
        name: Build and export
        uses: docker/build-push-action@v3
        with:
          context: .
          push: false
          tags: dsopbuilder:build-${{ github.run_number }}
          outputs: type=docker,dest=/tmp/dsopbuilder.tar
      -
        name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: dsopbuilder
          path: /tmp/dsopbuilder.tar

  test-rke2:
    runs-on: ubuntu-22.04
    needs: build
    outputs:
      kvname: ${{ steps.deploy_rke2.outputs.kvname }}

    steps:
      - uses: actions/checkout@v2
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      -
        name: Download artifact
        uses: actions/download-artifact@v3
        with:
          name: dsopbuilder
          path: /tmp
      -
        name: Load image
        run: |
          docker load --input /tmp/dsopbuilder.tar
          docker image ls -a
          docker run "dsopbuilder:build-${{ github.run_number }}" python3 main.py settings validate --rke2      
    
      - name: Deploy RKE2
        id: deploy_rke2
        uses: addnab/docker-run-action@v3
        with:
          image: dsopbuilder:build-${{ github.run_number }}         
          shell: bash
          run: | 
            # cp -f /transfer/config.json config/config.json
            
            export ARM_TENANT_ID=$(echo '${{ secrets.AZURE_GOV_CREDENTIALS }}' | jq .tenantId | tr -d '"')
            export ARM_CLIENT_ID=$(echo '${{ secrets.AZURE_GOV_CREDENTIALS }}' | jq .clientId | tr -d '"')
            export ARM_CLIENT_SECRET=$(echo '${{ secrets.AZURE_GOV_CREDENTIALS }}' | jq .clientSecret | tr -d '"')
            export ARM_SUBSCRIPTION_ID=$(echo '${{ secrets.AZURE_GOV_CREDENTIALS }}' | jq .subscriptionId | tr -d '"')
            export ARM_ENVIRONMENT=usgovernment
            az cloud set --name AzureUSGovernment
            az login --service-principal -u "${ARM_CLIENT_ID}" -p "${ARM_CLIENT_SECRET}" --tenant "${ARM_TENANT_ID}"
            
            which terraform
            terraform --version
            
            # yes 2> /dev/null | python3 main.py rke2 apply --project ${{ github.run_number }}
            # python3 main.py rke2 apply --project ${{ github.run_number }} < <(yes)
                       
            # cd /PyBuilder/working/dsop_rke2/${{ github.run_number }}
            
            # DIRECTORY=$(dirname $0)
            # KV_NAME=${1:-$(terraform output -raw kv_name)}
           
            echo "::set-output name=kvname::$KV_NAME"
            
            # source ../scripts/fetch-kubeconfig.sh
            # kubectl version


  test-aks:
    runs-on: ubuntu-22.04
    needs: build
    steps:
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      -
        name: Download artifact
        uses: actions/download-artifact@v3
        with:
          name: dsopbuilder
          path: /tmp
      -
        name: Load image
        run: |
          docker load --input /tmp/dsopbuilder.tar
          docker image ls -a
          docker run "dsopbuilder:build-${{ github.run_number }}" python3 main.py settings validate --aks
          
